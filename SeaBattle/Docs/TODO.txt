
12.06.2024
--- GameModel нужно переработать:
Board - лишний класс, поскольку представляет из себя лишь объедиенение двух полей. Концептуально подразумевалось, что
объект этого класса будет представлять "игровое поле" конкретного игрока, но теперь, когда была внедрена архитектура MVP,
а соответственно, объект класса GameModel, становится непонятно, зачем он нужен. GameModel выполняет все функции, возложенные
на Board. 
--- Достаточно перенести все Field в него.
--- Атака выполняется через EnemyField, ссылка на который будет в GameModel
--- Атаку соперника выполнить также через события
	1. Реализовать Бота с последующим переходом на realtime соперника через SignalR.
	2. Для атаки бота нужно перенести все Field в GameModel
	3. После GetReady в GameModel в ответ на это событие определится очередь ходов.
	4. Если это бот, 
	   4.1. то вызвать событие БотАтака, выполнить атаку на поле
	   4.2. потом вызывать собитие Updated, обновить очередь ходов, обновить представление для отображения хода соперника
	   4.3. действие игрока
	   4.4. продолжать цикл
--- Нужно перенести классы ObjectView в SeaBattle, поскольку именно на этом проекте лежит ответственность за область отображения.
Если этого не сделать, то в Domain должна появиться логика отображения, это неверно.
	1. Для переноса нужно создать объекты, суть которых передать данные в событиях.
	2. Создать мапперы для переноса данных
	3. Воспользовать библиотекой automapper

13.06.2024
ShipInformaion - метод Mapping, скорее всего начнутся траблы с маппингом коллекции координат.
GameModel - метод Update, могут начаться траблы с маппингом коллекции.

Проблем с внедрением AutoMapper не возникло, стоило указать нужную сборку, для рефлексивного получения нужных классов, 
как библиотека прекрасно справилась со всеми списками сама.

Встретился с другой концептуальной проблемой. Как реализовать общение с другим игроком. Если говорить предметно, то
игра из себя представляет диалог, который начинается с определения кто первым ходит, а затем начинается цикл, пока 
кто-то не проиграет, из сообщений (я ударил (х, у) - ты промазал / ты попал и наоборот).
Таким образом, можно реализовать сервер в виде передатчика сообщений. Можно реализовать сервер, который будет говорить игрокам
к чему привели их ходы. А можно передавать в начале игры на клиент каждого игрока данные о том, где находятся корабли противника. 

Если плюсы и минусы такого подхода:
Плюсы
+ От сервера требуется только передавать сообщения о координате атаки.
+ Не нужно будет менять текущие сущности
Минусы
- При уничтожении корабля нужно передавать информацию о том, что корабль уничтожен. Затем каким-то образом нужно будет определить какие клетки вместе
с той являются кораблём.

Сейчас подумал и решил, что собственно плюс единственный - не нужно менять сущности. А так никаких проблем с отображением не будет,
если игрок не будет знать заранее где вражеские корабли. 

Но теперь другой вопрос, должен ли сервер определять корректность ходов, или он будет выступать только в роли передатчика сообщений.

За сегодня я:
--- Внедрил AutoMapper
--- Разделил Domain и Application (Interaction) слои
--- Определил задачи для будущей работы (начал разрабатывать взаимодействие с другим игроком)
--- Избавился от Board класса в пользу IGameModel

Нужно выполнить:
--- Решить озвученную проблему со стартовой передачей ships при начале игры.
    Для этого
	--- Ввести новую сущность Field, в которой не будет ships, будут новые клетки, в которых будет отмечено, был ли на этой 
	этой корабль.
	--- Возмозможно от Ships отказываться не нужно, а просто добавлять в него корабли по мере их нахождения.
--- Определить роль сервера в игре.
--- Заняться отображением (займусь после решения озвученных проблем с помощью реализации бота с таким же апи как у сервера)

20.06.2024
Выполнено:
--- Закончил формирование набора событий для игры в морской бой между ботом и игроком
--- Добавил в Cell IsShipCell
--- Определил событие MoveAccepted, в котором передаю данные о результате хода противника.
--- Реализовал почти все методы в GameModel
--- Создал ConnectionPresenter для подписки объектов на события.

--- Решено, что серверное приложение будет играть роль валидатора, а не только принимать и отправлять сообщения.

Доделать:
Для объединения объектов пришлось объявить новый presenter. После размышлений пришёл к выводу, что таким классом нет необходимости
пользоваться. Вместо этого можно определить логику игры в классе player, отнести все события и методы в него, а затем подписаться 
на события в IGameModel. Это позволит отказаться от нового класса, сохранит прежний принцип работы.

--- Методы в BotPlayer не реализованы.
--- Пользовательский интерфейс не реализован.
--- Нужно реализовать метод AcceptMove, в котором результат хода будет добавлять в коллекцию вражеских кораблей корабль, если тот был найден 
путём уничтожения всех его cells.

